<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nc.nccommunity.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>


    <!--    List<Message> selectConversations(int userId, int offset, int limit);-->
    <select id="selectConversations" resultType="Message">
        select <include refid="selectFields"></include> from message
        where id in (
            select max(id) from message
            where status != 2 and from_id != 1
              and (#{userId} = from_id or #{userId} = to_id)
            group by conversation_id )
        order by id desc
        limit #{offset}, #{limit}
    </select>
<!--    int selectConversationCount(int userId);-->
    <select id="selectConversationCount" resultType="int">
        select count(m.maxId)
        from (
             select max(id) as maxId from message
             where status != 2 and from_id != 1
               and (#{userId} = from_id or #{userId} = to_id)
             group by conversation_id ) as m
    </select>
    
<!--    List<Message> selectLetters(String conversationId, int offset, int limit);-->
    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include> from message
        where status != 2 and from_id != 1
          and #{conversationId} = conversation_id
        order by id desc
        limit #{offset}, #{limit}
    </select>

<!--    int selectLetterCount(String conversationId);-->
    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where #{conversationId} = conversation_id and status != 2 and from_id != 1
    </select>

<!--    int selectUnreadLetterCount(int userid, String conversationId);-->
    <select id="selectUnreadLetterCount" resultType="int">
        select count(id) from message
        where to_id = #{userId} and status = 0 and from_id != 1
        <if test="#{conversationId} != null">
            and #{conversationId} = conversation_id
        </if>
    </select>

<!--    int insertMessage(Message message);-->
    <insert id="insertMessage">
        insert into message (<include refid="insertFields"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

<!--    int updateMessageStatus(List ids, int status);-->
    <update id="updateMessageStatus">
        update message set status = #{status}
        where id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
    </update>


</mapper>